# Generated by Django 3.2.13 on 2022-12-06 23:42

from django.db import migrations, models
import django.db.models.deletion

"""
The function populate_actor_new_field used for data migration never worked. Somehow it corrupted the data
in FilmActor model.

Data recovery was done using the following SQL statement:

INSERT INTO sakila.film_actor (actor, film_id) SELECT actor_id, film_id FROM sakila_backup.film_actor;

Where sakila_backup is backup version of the original sakila database (it must be loaded in mysql).

To populate the actor_new field the following SQL statement was used:

UPDATE film_actor INNER JOIN actor on film_actor.actor = actor.actor_id SET film_actor.actor_new_id = actor.actor_uuid;
"""

# def populate_actor_new_field(apps, schema_editor):
#
#     Actor = apps.get_model("movies_app", "Actor")
#     FilmActor = apps.get_model("movies_app", "FilmActor")
#
#     for film_actor in FilmActor.objects.all():
#         film_actor.actor_new = Actor.objects.get(actor_id=film_actor.actor)
#         print(film_actor.film_id, film_actor.actor_new)
#         film_actor.save()


class Migration(migrations.Migration):

    dependencies = [
        ('movies_app', '0008_remove_unique_together_constrain_in_film_actor_model'),
    ]

    operations = [
        migrations.AddField(
            model_name='filmactor',
            name='actor_new',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='movies_app.actor'),
        ),
        # this data migration never worked, see comments above
        # migrations.RunPython(populate_actor_new_field, reverse_code=migrations.RunPython.noop),
    ]
